#!/usr/bin/env gmic
# File : cube3d.gmic
# Author : David Tschumperle

# Entrypoint when run from CLI:
go =>[^] "3D Cube" e[] "" animate 40

# Main function
go :
  v 0

  # Create checkerboard floor and cube.
  plane3d 97,97,97,97 s3d f.. int(y/3)%2 a y => floor
  box3d 1,1,1 l. { s3d. f.. int(y/3)+2 a y } => cube
  (16^32^96;16^16^32;0^0^0) r. 512,512,1,3,3 => background
  8,1,1,3,"x>1?[64,0,32]:[0,0,0]" => colormap

  # Generate animation.
  nbf,f:=6*16,1 srand 5
  repeat 6 {
    dir:=arg0($>,0,3,0,2,2,0)
    shift:=arg0($dir,[1,0,1],[0,0,1],[1,0,1],[1,1,1])
    axis:=arg0($dir,[0,-1,0],[0,1,0],[-1,0,0],[1,0,0])
    scroll:=arg0($dir,[-1,0,0],[1,0,0],[0,1,0],[0,-1,0])

    repeat $nbf/6 { t:=$>/($>+$<+1)
      e[] "\r  > Frame "$f"/"$nbf f+=1
      ang:=lerp(0,90,$t)
      +-3d[cube] $shift r3d. $axis,$ang +3d. $shift # Rotate cube around bottom edge
      +3d. 48,48,-1 +3d. [floor] # Place cube on the floor
      +3d. {$t*[$scroll]} # Scroll floor
      -3d. 48.5,48.5,0 *3d. 110 r3d. 0,0,1,35 r3d. 1,0,0,-50 # Rotate whole object to have a nice view
      {background,[w,h]} j3d. ..,50%,50%,0,1,2,0,0,400 # Draw object on canvas
      +f. "const boundary=1; i!=j(1)||i!=j(0,1)" *. 255 dilate. 2 # Render as black & white outline
      map.. [colormap]
      max[-2,-1] max. [background]
      +b. 10,0 n. 0,200 +[-2,-1] c. 0,255
      rows. 10,100% # Remove ugly top part due to 3D perspective
      rs. 480
      rm..
    }
  }
  k[4--1]

# End of file.
