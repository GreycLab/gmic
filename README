--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                        _____   _   __  __ _____ _____
                       / ____| | | |  \/  |_   _/ ____|
                      | |  __  |_| | \  / | | || |
                      | | |_ |     | |\/| | | || |
                      | |__| |     | |  | |_| || |____
                       \_____|     |_|  |_|_____\_____|

                      GREYC's Magic for Image Computing

                             ( https://gmic.eu )

                                    _gmic_version

--------------------------------------------------------------------------------

# In a nutshell
#---------------

 G'MIC is a full-featured open-source framework for digital image processing, distributed
 under the CeCILL free software licenses (LGPL-like and/or GPL-compatible). It
 provides several user interfaces to convert / process / visualize
 generic image datasets, ranging from 1D scalar signals to 3D+t sequences of
 multi-spectral volumetric images, hence including 2D color images.

 G'MIC user interfaces are:

 1 - 'gmic', a command-line tool to use the G'MIC image processing features from
     a shell. In this setting, G'MIC may be seen as a friendly companion to the
     ImageMagick or GraphicsMagick software suites.

 2 - 'libgmic', a small, portable, thread-safe and multi-threaded, C++ image
     processing library to be linked to third-party applications. Its simple API
     allows programmers to add all G'MIC features in their own software without
     much efforts (a C API is available as well).
[
 3 - 'G'MIC-Qt', a plug-in to bring G'MIC capabilities to the image retouching and
     painting software GIMP, Krita, Photoshop and Paint.NET. More than 500 filters are already
     available, sorted by category (Artistic, Black & white, Colors, Contours,
     Deformations, Degradations, Details, Film emulation, Frames, Layers,
     Light & shadows, Patterns, Rendering, Repair, Sequences, etc.).

 4 - G'MIC Online, a web service to allow users applying image processing algorithms
     on their images, directly from a web browser.

 5 - 'ZArt', a Qt-based interface for real-time processing of video streaming coming
     from webcams or video files.

 G'MIC is an open framework: the default script language can be extended with
 custom G'MIC-written commands, defining thus new image available filters or
 effects. By the way, it already contains a substantial set of pre-defined image
 processing algorithms and pipelines (more than 1000).

 G'MIC has been designed with portability in mind, and runs on different
 platforms (Windows, Unix, MacOSX).
 Since 2008, it has been developed in the Image Team of the
 GREYC laboratory, in Caen/France, by permanent researchers working in the field
 of image processing on a daily basis.

# Project Managers and main developers
#-------------------------------------

  David Tschumperlé  ( https://tschumperle.users.greyc.fr/ )
  Sébastien Fourey   ( https://foureys.users.greyc.fr/ )

  A complete list of contributors is available on the project web page:

                         https://gmic.eu

# Institution
#-------------

 GREYC Image / CNRS UMR 6072 / FRANCE

 Team web page: https://www.greyc.fr/image

# License
#---------

 The C++ source code of G'MIC is distributed partly under the CeCILL-C v.1.0
 (LGPL-like) and CeCILL v.2.1 (GPL-compatible) licenses (see file 'COPYING').
 These licenses ( http://cecill.info/index.en.html ) have been
 created under the supervision of the three biggest research institutions on
 computer sciences in France:

   - CNRS  ( http://www.cnrs.fr/ )
   - CEA   ( http://www.cea.fr/ )
   - INRIA ( http://www.inria.fr/ )

# Testing the software
#----------------------

The correct functioning of the G'MIC software can be tested using these two
commands, which execute all the commands and filters available in the framework:

$ gmic input_text https://gmic.eu/gmic_stdlib.\$_version parse_cli images

and

$ gmic input_text https://gmic.eu/gmic_stdlib.\$_version parse_gui images

Please make sure you run these commands in a new empty folder, as it generates a
lot of new image files.

# Referencing the software
#--------------------------

To cite G'MIC in your own publications, please reference the JOSS article, published in January 2025:

  - D. Tschumperlé, S. Fourey and G. Osgood (2025).
    "G'MIC: An Open-Source Self-Extending Framework for Image Processing",
    Journal of Open Source Software, 10(105), 6618,
    https://doi.org/10.21105/joss.06618

  - Corresponding BibTeX entry:

  @article{Tschumperlé2025,
    doi = {10.21105/joss.06618},
    url = {https://doi.org/10.21105/joss.06618},
    year = {2025},
    publisher = {The Open Journal},
    volume = {10},
    number = {105},
    pages = {6618},
    author = {David Tschumperlé and Sébastien Fourey and Garry Osgood},
    title = {G'MIC: An Open-Source Self-Extending Framework for Image Processing},
    journal = {Journal of Open Source Software}
  }

# More information online
#-------------------------

  - Home page: https://gmic.eu
  - Download page: https://gmic.eu/download
  - Tutorial page: https://gmic.eu/tutorial/
  - Reference documentation: https://gmic.eu/reference
  - G'MIC Online: https://gmicol.greyc.fr

  - Discussion forum: https://discuss.pixls.us/c/software/gmic
  - Reddit: https://www.reddit.com/r/gmic/
  - Mastodon: https://piaille.fr/@gmic
  - GimpChat forum: http://gimpchat.com/viewforum.php?f=28
  - IRC: #pixls.us on Freenode.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------